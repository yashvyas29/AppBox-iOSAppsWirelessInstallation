///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBFILESRouteObjects.h"
#import "DBASYNCLaunchResultBase.h"
#import "DBASYNCPollError.h"
#import "DBASYNCPollResultBase.h"
#import "DBFILEPROPERTIESAddPropertiesError.h"
#import "DBFILEPROPERTIESGetTemplateResult.h"
#import "DBFILEPROPERTIESInvalidPropertyGroupError.h"
#import "DBFILEPROPERTIESListTemplateResult.h"
#import "DBFILEPROPERTIESLookUpPropertiesError.h"
#import "DBFILEPROPERTIESLookupError.h"
#import "DBFILEPROPERTIESPropertiesError.h"
#import "DBFILEPROPERTIESPropertyFieldTemplate.h"
#import "DBFILEPROPERTIESPropertyGroup.h"
#import "DBFILEPROPERTIESPropertyGroupTemplate.h"
#import "DBFILEPROPERTIESRemovePropertiesError.h"
#import "DBFILEPROPERTIESTemplateError.h"
#import "DBFILEPROPERTIESUpdatePropertiesError.h"
#import "DBFILESAlphaGetMetadataError.h"
#import "DBFILESCreateFolderError.h"
#import "DBFILESCreateFolderResult.h"
#import "DBFILESDeleteBatchError.h"
#import "DBFILESDeleteBatchJobStatus.h"
#import "DBFILESDeleteBatchLaunch.h"
#import "DBFILESDeleteBatchResult.h"
#import "DBFILESDeleteError.h"
#import "DBFILESDeleteResult.h"
#import "DBFILESDeletedMetadata.h"
#import "DBFILESDownloadError.h"
#import "DBFILESFileMetadata.h"
#import "DBFILESFileOpsResult.h"
#import "DBFILESFileSharingInfo.h"
#import "DBFILESFolderMetadata.h"
#import "DBFILESFolderSharingInfo.h"
#import "DBFILESGetCopyReferenceError.h"
#import "DBFILESGetCopyReferenceResult.h"
#import "DBFILESGetMetadataError.h"
#import "DBFILESGetTemporaryLinkError.h"
#import "DBFILESGetTemporaryLinkResult.h"
#import "DBFILESGetThumbnailBatchError.h"
#import "DBFILESGetThumbnailBatchResult.h"
#import "DBFILESGetThumbnailBatchResultEntry.h"
#import "DBFILESListFolderContinueError.h"
#import "DBFILESListFolderError.h"
#import "DBFILESListFolderGetLatestCursorResult.h"
#import "DBFILESListFolderLongpollError.h"
#import "DBFILESListFolderLongpollResult.h"
#import "DBFILESListFolderResult.h"
#import "DBFILESListRevisionsError.h"
#import "DBFILESListRevisionsResult.h"
#import "DBFILESLookupError.h"
#import "DBFILESMediaInfo.h"
#import "DBFILESMetadata.h"
#import "DBFILESPreviewError.h"
#import "DBFILESRelocationBatchError.h"
#import "DBFILESRelocationBatchJobStatus.h"
#import "DBFILESRelocationBatchLaunch.h"
#import "DBFILESRelocationBatchResult.h"
#import "DBFILESRelocationError.h"
#import "DBFILESRelocationResult.h"
#import "DBFILESRestoreError.h"
#import "DBFILESSaveCopyReferenceError.h"
#import "DBFILESSaveCopyReferenceResult.h"
#import "DBFILESSaveUrlError.h"
#import "DBFILESSaveUrlJobStatus.h"
#import "DBFILESSaveUrlResult.h"
#import "DBFILESSearchError.h"
#import "DBFILESSearchMatch.h"
#import "DBFILESSearchResult.h"
#import "DBFILESThumbnailError.h"
#import "DBFILESUploadError.h"
#import "DBFILESUploadErrorWithProperties.h"
#import "DBFILESUploadSessionFinishBatchJobStatus.h"
#import "DBFILESUploadSessionFinishBatchLaunch.h"
#import "DBFILESUploadSessionFinishBatchResult.h"
#import "DBFILESUploadSessionFinishError.h"
#import "DBFILESUploadSessionLookupError.h"
#import "DBFILESUploadSessionOffsetError.h"
#import "DBFILESUploadSessionStartResult.h"
#import "DBFILESUploadWriteFailed.h"
#import "DBFILESUserAuthRoutes.h"
#import "DBFILESWriteError.h"
#import "DBRequestErrors.h"
#import "DBStoneBase.h"

@implementation DBFILESRouteObjects

static DBRoute *DBFILESAlphaGetMetadata;
static DBRoute *DBFILESAlphaUpload;
static DBRoute *DBFILESDCopy;
static DBRoute *DBFILESDCopyBatch;
static DBRoute *DBFILESDCopyBatchCheck;
static DBRoute *DBFILESDCopyReferenceGet;
static DBRoute *DBFILESDCopyReferenceSave;
static DBRoute *DBFILESDCopyV2;
static DBRoute *DBFILESCreateFolder;
static DBRoute *DBFILESCreateFolderV2;
static DBRoute *DBFILESDelete_;
static DBRoute *DBFILESDeleteBatch;
static DBRoute *DBFILESDeleteBatchCheck;
static DBRoute *DBFILESDeleteV2;
static DBRoute *DBFILESDownload;
static DBRoute *DBFILESGetMetadata;
static DBRoute *DBFILESGetPreview;
static DBRoute *DBFILESGetTemporaryLink;
static DBRoute *DBFILESGetThumbnail;
static DBRoute *DBFILESGetThumbnailBatch;
static DBRoute *DBFILESListFolder;
static DBRoute *DBFILESListFolderContinue;
static DBRoute *DBFILESListFolderGetLatestCursor;
static DBRoute *DBFILESListFolderLongpoll;
static DBRoute *DBFILESListRevisions;
static DBRoute *DBFILESMove;
static DBRoute *DBFILESMoveBatch;
static DBRoute *DBFILESMoveBatchCheck;
static DBRoute *DBFILESMoveV2;
static DBRoute *DBFILESPermanentlyDelete;
static DBRoute *DBFILESPropertiesAdd;
static DBRoute *DBFILESPropertiesOverwrite;
static DBRoute *DBFILESPropertiesRemove;
static DBRoute *DBFILESPropertiesTemplateGet;
static DBRoute *DBFILESPropertiesTemplateList;
static DBRoute *DBFILESPropertiesUpdate;
static DBRoute *DBFILESRestore;
static DBRoute *DBFILESSaveUrl;
static DBRoute *DBFILESSaveUrlCheckJobStatus;
static DBRoute *DBFILESSearch;
static DBRoute *DBFILESUpload;
static DBRoute *DBFILESUploadSessionAppend;
static DBRoute *DBFILESUploadSessionAppendV2;
static DBRoute *DBFILESUploadSessionFinish;
static DBRoute *DBFILESUploadSessionFinishBatch;
static DBRoute *DBFILESUploadSessionFinishBatchCheck;
static DBRoute *DBFILESUploadSessionStart;

+ (DBRoute *)DBFILESAlphaGetMetadata {
  if (!DBFILESAlphaGetMetadata) {
    DBFILESAlphaGetMetadata = [[DBRoute alloc] init:@"alpha/get_metadata"
                                         namespace_:@"files"
                                         deprecated:@NO
                                         resultType:[DBFILESMetadata class]
                                          errorType:[DBFILESAlphaGetMetadataError class]
                                              attrs:@{
                                                @"auth" : @"user",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBFILESAlphaGetMetadata;
}

+ (DBRoute *)DBFILESAlphaUpload {
  if (!DBFILESAlphaUpload) {
    DBFILESAlphaUpload = [[DBRoute alloc] init:@"alpha/upload"
                                    namespace_:@"files"
                                    deprecated:@NO
                                    resultType:[DBFILESFileMetadata class]
                                     errorType:[DBFILESUploadErrorWithProperties class]
                                         attrs:@{
                                           @"auth" : @"user",
                                           @"host" : @"content",
                                           @"style" : @"upload"
                                         }
                         dataStructSerialBlock:nil
                       dataStructDeserialBlock:nil];
  }
  return DBFILESAlphaUpload;
}

+ (DBRoute *)DBFILESDCopy {
  if (!DBFILESDCopy) {
    DBFILESDCopy = [[DBRoute alloc] init:@"copy"
                              namespace_:@"files"
                              deprecated:@YES
                              resultType:[DBFILESMetadata class]
                               errorType:[DBFILESRelocationError class]
                                   attrs:@{
                                     @"auth" : @"user",
                                     @"host" : @"api",
                                     @"style" : @"rpc"
                                   }
                   dataStructSerialBlock:nil
                 dataStructDeserialBlock:nil];
  }
  return DBFILESDCopy;
}

+ (DBRoute *)DBFILESDCopyBatch {
  if (!DBFILESDCopyBatch) {
    DBFILESDCopyBatch = [[DBRoute alloc] init:@"copy_batch"
                                   namespace_:@"files"
                                   deprecated:@NO
                                   resultType:[DBFILESRelocationBatchLaunch class]
                                    errorType:nil
                                        attrs:@{
                                          @"auth" : @"user",
                                          @"host" : @"api",
                                          @"style" : @"rpc"
                                        }
                        dataStructSerialBlock:nil
                      dataStructDeserialBlock:nil];
  }
  return DBFILESDCopyBatch;
}

+ (DBRoute *)DBFILESDCopyBatchCheck {
  if (!DBFILESDCopyBatchCheck) {
    DBFILESDCopyBatchCheck = [[DBRoute alloc] init:@"copy_batch/check"
                                        namespace_:@"files"
                                        deprecated:@NO
                                        resultType:[DBFILESRelocationBatchJobStatus class]
                                         errorType:[DBASYNCPollError class]
                                             attrs:@{
                                               @"auth" : @"user",
                                               @"host" : @"api",
                                               @"style" : @"rpc"
                                             }
                             dataStructSerialBlock:nil
                           dataStructDeserialBlock:nil];
  }
  return DBFILESDCopyBatchCheck;
}

+ (DBRoute *)DBFILESDCopyReferenceGet {
  if (!DBFILESDCopyReferenceGet) {
    DBFILESDCopyReferenceGet = [[DBRoute alloc] init:@"copy_reference/get"
                                          namespace_:@"files"
                                          deprecated:@NO
                                          resultType:[DBFILESGetCopyReferenceResult class]
                                           errorType:[DBFILESGetCopyReferenceError class]
                                               attrs:@{
                                                 @"auth" : @"user",
                                                 @"host" : @"api",
                                                 @"style" : @"rpc"
                                               }
                               dataStructSerialBlock:nil
                             dataStructDeserialBlock:nil];
  }
  return DBFILESDCopyReferenceGet;
}

+ (DBRoute *)DBFILESDCopyReferenceSave {
  if (!DBFILESDCopyReferenceSave) {
    DBFILESDCopyReferenceSave = [[DBRoute alloc] init:@"copy_reference/save"
                                           namespace_:@"files"
                                           deprecated:@NO
                                           resultType:[DBFILESSaveCopyReferenceResult class]
                                            errorType:[DBFILESSaveCopyReferenceError class]
                                                attrs:@{
                                                  @"auth" : @"user",
                                                  @"host" : @"api",
                                                  @"style" : @"rpc"
                                                }
                                dataStructSerialBlock:nil
                              dataStructDeserialBlock:nil];
  }
  return DBFILESDCopyReferenceSave;
}

+ (DBRoute *)DBFILESDCopyV2 {
  if (!DBFILESDCopyV2) {
    DBFILESDCopyV2 = [[DBRoute alloc] init:@"copy_v2"
                                namespace_:@"files"
                                deprecated:@NO
                                resultType:[DBFILESRelocationResult class]
                                 errorType:[DBFILESRelocationError class]
                                     attrs:@{
                                       @"auth" : @"user",
                                       @"host" : @"api",
                                       @"style" : @"rpc"
                                     }
                     dataStructSerialBlock:nil
                   dataStructDeserialBlock:nil];
  }
  return DBFILESDCopyV2;
}

+ (DBRoute *)DBFILESCreateFolder {
  if (!DBFILESCreateFolder) {
    DBFILESCreateFolder = [[DBRoute alloc] init:@"create_folder"
                                     namespace_:@"files"
                                     deprecated:@YES
                                     resultType:[DBFILESFolderMetadata class]
                                      errorType:[DBFILESCreateFolderError class]
                                          attrs:@{
                                            @"auth" : @"user",
                                            @"host" : @"api",
                                            @"style" : @"rpc"
                                          }
                          dataStructSerialBlock:nil
                        dataStructDeserialBlock:nil];
  }
  return DBFILESCreateFolder;
}

+ (DBRoute *)DBFILESCreateFolderV2 {
  if (!DBFILESCreateFolderV2) {
    DBFILESCreateFolderV2 = [[DBRoute alloc] init:@"create_folder_v2"
                                       namespace_:@"files"
                                       deprecated:@NO
                                       resultType:[DBFILESCreateFolderResult class]
                                        errorType:[DBFILESCreateFolderError class]
                                            attrs:@{
                                              @"auth" : @"user",
                                              @"host" : @"api",
                                              @"style" : @"rpc"
                                            }
                            dataStructSerialBlock:nil
                          dataStructDeserialBlock:nil];
  }
  return DBFILESCreateFolderV2;
}

+ (DBRoute *)DBFILESDelete_ {
  if (!DBFILESDelete_) {
    DBFILESDelete_ = [[DBRoute alloc] init:@"delete"
                                namespace_:@"files"
                                deprecated:@YES
                                resultType:[DBFILESMetadata class]
                                 errorType:[DBFILESDeleteError class]
                                     attrs:@{
                                       @"auth" : @"user",
                                       @"host" : @"api",
                                       @"style" : @"rpc"
                                     }
                     dataStructSerialBlock:nil
                   dataStructDeserialBlock:nil];
  }
  return DBFILESDelete_;
}

+ (DBRoute *)DBFILESDeleteBatch {
  if (!DBFILESDeleteBatch) {
    DBFILESDeleteBatch = [[DBRoute alloc] init:@"delete_batch"
                                    namespace_:@"files"
                                    deprecated:@NO
                                    resultType:[DBFILESDeleteBatchLaunch class]
                                     errorType:nil
                                         attrs:@{
                                           @"auth" : @"user",
                                           @"host" : @"api",
                                           @"style" : @"rpc"
                                         }
                         dataStructSerialBlock:nil
                       dataStructDeserialBlock:nil];
  }
  return DBFILESDeleteBatch;
}

+ (DBRoute *)DBFILESDeleteBatchCheck {
  if (!DBFILESDeleteBatchCheck) {
    DBFILESDeleteBatchCheck = [[DBRoute alloc] init:@"delete_batch/check"
                                         namespace_:@"files"
                                         deprecated:@NO
                                         resultType:[DBFILESDeleteBatchJobStatus class]
                                          errorType:[DBASYNCPollError class]
                                              attrs:@{
                                                @"auth" : @"user",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBFILESDeleteBatchCheck;
}

+ (DBRoute *)DBFILESDeleteV2 {
  if (!DBFILESDeleteV2) {
    DBFILESDeleteV2 = [[DBRoute alloc] init:@"delete_v2"
                                 namespace_:@"files"
                                 deprecated:@NO
                                 resultType:[DBFILESDeleteResult class]
                                  errorType:[DBFILESDeleteError class]
                                      attrs:@{
                                        @"auth" : @"user",
                                        @"host" : @"api",
                                        @"style" : @"rpc"
                                      }
                      dataStructSerialBlock:nil
                    dataStructDeserialBlock:nil];
  }
  return DBFILESDeleteV2;
}

+ (DBRoute *)DBFILESDownload {
  if (!DBFILESDownload) {
    DBFILESDownload = [[DBRoute alloc] init:@"download"
                                 namespace_:@"files"
                                 deprecated:@NO
                                 resultType:[DBFILESFileMetadata class]
                                  errorType:[DBFILESDownloadError class]
                                      attrs:@{
                                        @"auth" : @"user",
                                        @"host" : @"content",
                                        @"style" : @"download"
                                      }
                      dataStructSerialBlock:nil
                    dataStructDeserialBlock:nil];
  }
  return DBFILESDownload;
}

+ (DBRoute *)DBFILESGetMetadata {
  if (!DBFILESGetMetadata) {
    DBFILESGetMetadata = [[DBRoute alloc] init:@"get_metadata"
                                    namespace_:@"files"
                                    deprecated:@NO
                                    resultType:[DBFILESMetadata class]
                                     errorType:[DBFILESGetMetadataError class]
                                         attrs:@{
                                           @"auth" : @"user",
                                           @"host" : @"api",
                                           @"style" : @"rpc"
                                         }
                         dataStructSerialBlock:nil
                       dataStructDeserialBlock:nil];
  }
  return DBFILESGetMetadata;
}

+ (DBRoute *)DBFILESGetPreview {
  if (!DBFILESGetPreview) {
    DBFILESGetPreview = [[DBRoute alloc] init:@"get_preview"
                                   namespace_:@"files"
                                   deprecated:@NO
                                   resultType:[DBFILESFileMetadata class]
                                    errorType:[DBFILESPreviewError class]
                                        attrs:@{
                                          @"auth" : @"user",
                                          @"host" : @"content",
                                          @"style" : @"download"
                                        }
                        dataStructSerialBlock:nil
                      dataStructDeserialBlock:nil];
  }
  return DBFILESGetPreview;
}

+ (DBRoute *)DBFILESGetTemporaryLink {
  if (!DBFILESGetTemporaryLink) {
    DBFILESGetTemporaryLink = [[DBRoute alloc] init:@"get_temporary_link"
                                         namespace_:@"files"
                                         deprecated:@NO
                                         resultType:[DBFILESGetTemporaryLinkResult class]
                                          errorType:[DBFILESGetTemporaryLinkError class]
                                              attrs:@{
                                                @"auth" : @"user",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBFILESGetTemporaryLink;
}

+ (DBRoute *)DBFILESGetThumbnail {
  if (!DBFILESGetThumbnail) {
    DBFILESGetThumbnail = [[DBRoute alloc] init:@"get_thumbnail"
                                     namespace_:@"files"
                                     deprecated:@NO
                                     resultType:[DBFILESFileMetadata class]
                                      errorType:[DBFILESThumbnailError class]
                                          attrs:@{
                                            @"auth" : @"user",
                                            @"host" : @"content",
                                            @"style" : @"download"
                                          }
                          dataStructSerialBlock:nil
                        dataStructDeserialBlock:nil];
  }
  return DBFILESGetThumbnail;
}

+ (DBRoute *)DBFILESGetThumbnailBatch {
  if (!DBFILESGetThumbnailBatch) {
    DBFILESGetThumbnailBatch = [[DBRoute alloc] init:@"get_thumbnail_batch"
                                          namespace_:@"files"
                                          deprecated:@NO
                                          resultType:[DBFILESGetThumbnailBatchResult class]
                                           errorType:[DBFILESGetThumbnailBatchError class]
                                               attrs:@{
                                                 @"auth" : @"user",
                                                 @"host" : @"content",
                                                 @"style" : @"rpc"
                                               }
                               dataStructSerialBlock:nil
                             dataStructDeserialBlock:nil];
  }
  return DBFILESGetThumbnailBatch;
}

+ (DBRoute *)DBFILESListFolder {
  if (!DBFILESListFolder) {
    DBFILESListFolder = [[DBRoute alloc] init:@"list_folder"
                                   namespace_:@"files"
                                   deprecated:@NO
                                   resultType:[DBFILESListFolderResult class]
                                    errorType:[DBFILESListFolderError class]
                                        attrs:@{
                                          @"auth" : @"user",
                                          @"host" : @"api",
                                          @"style" : @"rpc"
                                        }
                        dataStructSerialBlock:nil
                      dataStructDeserialBlock:nil];
  }
  return DBFILESListFolder;
}

+ (DBRoute *)DBFILESListFolderContinue {
  if (!DBFILESListFolderContinue) {
    DBFILESListFolderContinue = [[DBRoute alloc] init:@"list_folder/continue"
                                           namespace_:@"files"
                                           deprecated:@NO
                                           resultType:[DBFILESListFolderResult class]
                                            errorType:[DBFILESListFolderContinueError class]
                                                attrs:@{
                                                  @"auth" : @"user",
                                                  @"host" : @"api",
                                                  @"style" : @"rpc"
                                                }
                                dataStructSerialBlock:nil
                              dataStructDeserialBlock:nil];
  }
  return DBFILESListFolderContinue;
}

+ (DBRoute *)DBFILESListFolderGetLatestCursor {
  if (!DBFILESListFolderGetLatestCursor) {
    DBFILESListFolderGetLatestCursor = [[DBRoute alloc] init:@"list_folder/get_latest_cursor"
                                                  namespace_:@"files"
                                                  deprecated:@NO
                                                  resultType:[DBFILESListFolderGetLatestCursorResult class]
                                                   errorType:[DBFILESListFolderError class]
                                                       attrs:@{
                                                         @"auth" : @"user",
                                                         @"host" : @"api",
                                                         @"style" : @"rpc"
                                                       }
                                       dataStructSerialBlock:nil
                                     dataStructDeserialBlock:nil];
  }
  return DBFILESListFolderGetLatestCursor;
}

+ (DBRoute *)DBFILESListFolderLongpoll {
  if (!DBFILESListFolderLongpoll) {
    DBFILESListFolderLongpoll = [[DBRoute alloc] init:@"list_folder/longpoll"
                                           namespace_:@"files"
                                           deprecated:@NO
                                           resultType:[DBFILESListFolderLongpollResult class]
                                            errorType:[DBFILESListFolderLongpollError class]
                                                attrs:@{
                                                  @"auth" : @"noauth",
                                                  @"host" : @"notify",
                                                  @"style" : @"rpc"
                                                }
                                dataStructSerialBlock:nil
                              dataStructDeserialBlock:nil];
  }
  return DBFILESListFolderLongpoll;
}

+ (DBRoute *)DBFILESListRevisions {
  if (!DBFILESListRevisions) {
    DBFILESListRevisions = [[DBRoute alloc] init:@"list_revisions"
                                      namespace_:@"files"
                                      deprecated:@NO
                                      resultType:[DBFILESListRevisionsResult class]
                                       errorType:[DBFILESListRevisionsError class]
                                           attrs:@{
                                             @"auth" : @"user",
                                             @"host" : @"api",
                                             @"style" : @"rpc"
                                           }
                           dataStructSerialBlock:nil
                         dataStructDeserialBlock:nil];
  }
  return DBFILESListRevisions;
}

+ (DBRoute *)DBFILESMove {
  if (!DBFILESMove) {
    DBFILESMove = [[DBRoute alloc] init:@"move"
                             namespace_:@"files"
                             deprecated:@YES
                             resultType:[DBFILESMetadata class]
                              errorType:[DBFILESRelocationError class]
                                  attrs:@{
                                    @"auth" : @"user",
                                    @"host" : @"api",
                                    @"style" : @"rpc"
                                  }
                  dataStructSerialBlock:nil
                dataStructDeserialBlock:nil];
  }
  return DBFILESMove;
}

+ (DBRoute *)DBFILESMoveBatch {
  if (!DBFILESMoveBatch) {
    DBFILESMoveBatch = [[DBRoute alloc] init:@"move_batch"
                                  namespace_:@"files"
                                  deprecated:@NO
                                  resultType:[DBFILESRelocationBatchLaunch class]
                                   errorType:nil
                                       attrs:@{
                                         @"auth" : @"user",
                                         @"host" : @"api",
                                         @"style" : @"rpc"
                                       }
                       dataStructSerialBlock:nil
                     dataStructDeserialBlock:nil];
  }
  return DBFILESMoveBatch;
}

+ (DBRoute *)DBFILESMoveBatchCheck {
  if (!DBFILESMoveBatchCheck) {
    DBFILESMoveBatchCheck = [[DBRoute alloc] init:@"move_batch/check"
                                       namespace_:@"files"
                                       deprecated:@NO
                                       resultType:[DBFILESRelocationBatchJobStatus class]
                                        errorType:[DBASYNCPollError class]
                                            attrs:@{
                                              @"auth" : @"user",
                                              @"host" : @"api",
                                              @"style" : @"rpc"
                                            }
                            dataStructSerialBlock:nil
                          dataStructDeserialBlock:nil];
  }
  return DBFILESMoveBatchCheck;
}

+ (DBRoute *)DBFILESMoveV2 {
  if (!DBFILESMoveV2) {
    DBFILESMoveV2 = [[DBRoute alloc] init:@"move_v2"
                               namespace_:@"files"
                               deprecated:@NO
                               resultType:[DBFILESRelocationResult class]
                                errorType:[DBFILESRelocationError class]
                                    attrs:@{
                                      @"auth" : @"user",
                                      @"host" : @"api",
                                      @"style" : @"rpc"
                                    }
                    dataStructSerialBlock:nil
                  dataStructDeserialBlock:nil];
  }
  return DBFILESMoveV2;
}

+ (DBRoute *)DBFILESPermanentlyDelete {
  if (!DBFILESPermanentlyDelete) {
    DBFILESPermanentlyDelete = [[DBRoute alloc] init:@"permanently_delete"
                                          namespace_:@"files"
                                          deprecated:@NO
                                          resultType:nil
                                           errorType:[DBFILESDeleteError class]
                                               attrs:@{
                                                 @"auth" : @"user",
                                                 @"host" : @"api",
                                                 @"style" : @"rpc"
                                               }
                               dataStructSerialBlock:nil
                             dataStructDeserialBlock:nil];
  }
  return DBFILESPermanentlyDelete;
}

+ (DBRoute *)DBFILESPropertiesAdd {
  if (!DBFILESPropertiesAdd) {
    DBFILESPropertiesAdd = [[DBRoute alloc] init:@"properties/add"
                                      namespace_:@"files"
                                      deprecated:@YES
                                      resultType:nil
                                       errorType:[DBFILEPROPERTIESAddPropertiesError class]
                                           attrs:@{
                                             @"auth" : @"user",
                                             @"host" : @"api",
                                             @"style" : @"rpc"
                                           }
                           dataStructSerialBlock:nil
                         dataStructDeserialBlock:nil];
  }
  return DBFILESPropertiesAdd;
}

+ (DBRoute *)DBFILESPropertiesOverwrite {
  if (!DBFILESPropertiesOverwrite) {
    DBFILESPropertiesOverwrite = [[DBRoute alloc] init:@"properties/overwrite"
                                            namespace_:@"files"
                                            deprecated:@YES
                                            resultType:nil
                                             errorType:[DBFILEPROPERTIESInvalidPropertyGroupError class]
                                                 attrs:@{
                                                   @"auth" : @"user",
                                                   @"host" : @"api",
                                                   @"style" : @"rpc"
                                                 }
                                 dataStructSerialBlock:nil
                               dataStructDeserialBlock:nil];
  }
  return DBFILESPropertiesOverwrite;
}

+ (DBRoute *)DBFILESPropertiesRemove {
  if (!DBFILESPropertiesRemove) {
    DBFILESPropertiesRemove = [[DBRoute alloc] init:@"properties/remove"
                                         namespace_:@"files"
                                         deprecated:@YES
                                         resultType:nil
                                          errorType:[DBFILEPROPERTIESRemovePropertiesError class]
                                              attrs:@{
                                                @"auth" : @"user",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBFILESPropertiesRemove;
}

+ (DBRoute *)DBFILESPropertiesTemplateGet {
  if (!DBFILESPropertiesTemplateGet) {
    DBFILESPropertiesTemplateGet = [[DBRoute alloc] init:@"properties/template/get"
                                              namespace_:@"files"
                                              deprecated:@YES
                                              resultType:[DBFILEPROPERTIESGetTemplateResult class]
                                               errorType:[DBFILEPROPERTIESTemplateError class]
                                                   attrs:@{
                                                     @"auth" : @"user",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBFILESPropertiesTemplateGet;
}

+ (DBRoute *)DBFILESPropertiesTemplateList {
  if (!DBFILESPropertiesTemplateList) {
    DBFILESPropertiesTemplateList = [[DBRoute alloc] init:@"properties/template/list"
                                               namespace_:@"files"
                                               deprecated:@YES
                                               resultType:[DBFILEPROPERTIESListTemplateResult class]
                                                errorType:[DBFILEPROPERTIESTemplateError class]
                                                    attrs:@{
                                                      @"auth" : @"user",
                                                      @"host" : @"api",
                                                      @"style" : @"rpc"
                                                    }
                                    dataStructSerialBlock:nil
                                  dataStructDeserialBlock:nil];
  }
  return DBFILESPropertiesTemplateList;
}

+ (DBRoute *)DBFILESPropertiesUpdate {
  if (!DBFILESPropertiesUpdate) {
    DBFILESPropertiesUpdate = [[DBRoute alloc] init:@"properties/update"
                                         namespace_:@"files"
                                         deprecated:@YES
                                         resultType:nil
                                          errorType:[DBFILEPROPERTIESUpdatePropertiesError class]
                                              attrs:@{
                                                @"auth" : @"user",
                                                @"host" : @"api",
                                                @"style" : @"rpc"
                                              }
                              dataStructSerialBlock:nil
                            dataStructDeserialBlock:nil];
  }
  return DBFILESPropertiesUpdate;
}

+ (DBRoute *)DBFILESRestore {
  if (!DBFILESRestore) {
    DBFILESRestore = [[DBRoute alloc] init:@"restore"
                                namespace_:@"files"
                                deprecated:@NO
                                resultType:[DBFILESFileMetadata class]
                                 errorType:[DBFILESRestoreError class]
                                     attrs:@{
                                       @"auth" : @"user",
                                       @"host" : @"api",
                                       @"style" : @"rpc"
                                     }
                     dataStructSerialBlock:nil
                   dataStructDeserialBlock:nil];
  }
  return DBFILESRestore;
}

+ (DBRoute *)DBFILESSaveUrl {
  if (!DBFILESSaveUrl) {
    DBFILESSaveUrl = [[DBRoute alloc] init:@"save_url"
                                namespace_:@"files"
                                deprecated:@NO
                                resultType:[DBFILESSaveUrlResult class]
                                 errorType:[DBFILESSaveUrlError class]
                                     attrs:@{
                                       @"auth" : @"user",
                                       @"host" : @"api",
                                       @"style" : @"rpc"
                                     }
                     dataStructSerialBlock:nil
                   dataStructDeserialBlock:nil];
  }
  return DBFILESSaveUrl;
}

+ (DBRoute *)DBFILESSaveUrlCheckJobStatus {
  if (!DBFILESSaveUrlCheckJobStatus) {
    DBFILESSaveUrlCheckJobStatus = [[DBRoute alloc] init:@"save_url/check_job_status"
                                              namespace_:@"files"
                                              deprecated:@NO
                                              resultType:[DBFILESSaveUrlJobStatus class]
                                               errorType:[DBASYNCPollError class]
                                                   attrs:@{
                                                     @"auth" : @"user",
                                                     @"host" : @"api",
                                                     @"style" : @"rpc"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBFILESSaveUrlCheckJobStatus;
}

+ (DBRoute *)DBFILESSearch {
  if (!DBFILESSearch) {
    DBFILESSearch = [[DBRoute alloc] init:@"search"
                               namespace_:@"files"
                               deprecated:@NO
                               resultType:[DBFILESSearchResult class]
                                errorType:[DBFILESSearchError class]
                                    attrs:@{
                                      @"auth" : @"user",
                                      @"host" : @"api",
                                      @"style" : @"rpc"
                                    }
                    dataStructSerialBlock:nil
                  dataStructDeserialBlock:nil];
  }
  return DBFILESSearch;
}

+ (DBRoute *)DBFILESUpload {
  if (!DBFILESUpload) {
    DBFILESUpload = [[DBRoute alloc] init:@"upload"
                               namespace_:@"files"
                               deprecated:@NO
                               resultType:[DBFILESFileMetadata class]
                                errorType:[DBFILESUploadError class]
                                    attrs:@{
                                      @"auth" : @"user",
                                      @"host" : @"content",
                                      @"style" : @"upload"
                                    }
                    dataStructSerialBlock:nil
                  dataStructDeserialBlock:nil];
  }
  return DBFILESUpload;
}

+ (DBRoute *)DBFILESUploadSessionAppend {
  if (!DBFILESUploadSessionAppend) {
    DBFILESUploadSessionAppend = [[DBRoute alloc] init:@"upload_session/append"
                                            namespace_:@"files"
                                            deprecated:@YES
                                            resultType:nil
                                             errorType:[DBFILESUploadSessionLookupError class]
                                                 attrs:@{
                                                   @"auth" : @"user",
                                                   @"host" : @"content",
                                                   @"style" : @"upload"
                                                 }
                                 dataStructSerialBlock:nil
                               dataStructDeserialBlock:nil];
  }
  return DBFILESUploadSessionAppend;
}

+ (DBRoute *)DBFILESUploadSessionAppendV2 {
  if (!DBFILESUploadSessionAppendV2) {
    DBFILESUploadSessionAppendV2 = [[DBRoute alloc] init:@"upload_session/append_v2"
                                              namespace_:@"files"
                                              deprecated:@NO
                                              resultType:nil
                                               errorType:[DBFILESUploadSessionLookupError class]
                                                   attrs:@{
                                                     @"auth" : @"user",
                                                     @"host" : @"content",
                                                     @"style" : @"upload"
                                                   }
                                   dataStructSerialBlock:nil
                                 dataStructDeserialBlock:nil];
  }
  return DBFILESUploadSessionAppendV2;
}

+ (DBRoute *)DBFILESUploadSessionFinish {
  if (!DBFILESUploadSessionFinish) {
    DBFILESUploadSessionFinish = [[DBRoute alloc] init:@"upload_session/finish"
                                            namespace_:@"files"
                                            deprecated:@NO
                                            resultType:[DBFILESFileMetadata class]
                                             errorType:[DBFILESUploadSessionFinishError class]
                                                 attrs:@{
                                                   @"auth" : @"user",
                                                   @"host" : @"content",
                                                   @"style" : @"upload"
                                                 }
                                 dataStructSerialBlock:nil
                               dataStructDeserialBlock:nil];
  }
  return DBFILESUploadSessionFinish;
}

+ (DBRoute *)DBFILESUploadSessionFinishBatch {
  if (!DBFILESUploadSessionFinishBatch) {
    DBFILESUploadSessionFinishBatch = [[DBRoute alloc] init:@"upload_session/finish_batch"
                                                 namespace_:@"files"
                                                 deprecated:@NO
                                                 resultType:[DBFILESUploadSessionFinishBatchLaunch class]
                                                  errorType:nil
                                                      attrs:@{
                                                        @"auth" : @"user",
                                                        @"host" : @"api",
                                                        @"style" : @"rpc"
                                                      }
                                      dataStructSerialBlock:nil
                                    dataStructDeserialBlock:nil];
  }
  return DBFILESUploadSessionFinishBatch;
}

+ (DBRoute *)DBFILESUploadSessionFinishBatchCheck {
  if (!DBFILESUploadSessionFinishBatchCheck) {
    DBFILESUploadSessionFinishBatchCheck = [[DBRoute alloc] init:@"upload_session/finish_batch/check"
                                                      namespace_:@"files"
                                                      deprecated:@NO
                                                      resultType:[DBFILESUploadSessionFinishBatchJobStatus class]
                                                       errorType:[DBASYNCPollError class]
                                                           attrs:@{
                                                             @"auth" : @"user",
                                                             @"host" : @"api",
                                                             @"style" : @"rpc"
                                                           }
                                           dataStructSerialBlock:nil
                                         dataStructDeserialBlock:nil];
  }
  return DBFILESUploadSessionFinishBatchCheck;
}

+ (DBRoute *)DBFILESUploadSessionStart {
  if (!DBFILESUploadSessionStart) {
    DBFILESUploadSessionStart = [[DBRoute alloc] init:@"upload_session/start"
                                           namespace_:@"files"
                                           deprecated:@NO
                                           resultType:[DBFILESUploadSessionStartResult class]
                                            errorType:nil
                                                attrs:@{
                                                  @"auth" : @"user",
                                                  @"host" : @"content",
                                                  @"style" : @"upload"
                                                }
                                dataStructSerialBlock:nil
                              dataStructDeserialBlock:nil];
  }
  return DBFILESUploadSessionStart;
}

@end
